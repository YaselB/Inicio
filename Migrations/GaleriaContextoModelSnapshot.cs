// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using inicio.models;

#nullable disable

namespace inicio.Migrations
{
    [DbContext(typeof(GaleriaContexto))]
    partial class GaleriaContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("inicio.models.Album", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("inicio.models.Fotos", b =>
                {
                    b.Property<int>("PhothosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PhothosID"));

                    b.Property<int>("AlbumID")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha_Subida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url_Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PhothosID");

                    b.HasIndex("AlbumID");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("inicio.models.Rol", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("rols");
                });

            modelBuilder.Entity("inicio.models.Usuarios", b =>
                {
                    b.Property<int>("DNI")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DNI"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("confirm")
                        .HasColumnType("boolean");

                    b.Property<string>("token")
                        .HasColumnType("text");

                    b.HasKey("DNI");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("inicio.models.Album", b =>
                {
                    b.HasOne("inicio.models.Usuarios", "usuarios")
                        .WithMany("albums")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("inicio.models.Fotos", b =>
                {
                    b.HasOne("inicio.models.Album", "album")
                        .WithMany("fotos")
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("album");
                });

            modelBuilder.Entity("inicio.models.Rol", b =>
                {
                    b.HasOne("inicio.models.Usuarios", "usuarios")
                        .WithOne("rols")
                        .HasForeignKey("inicio.models.Rol", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("inicio.models.Album", b =>
                {
                    b.Navigation("fotos");
                });

            modelBuilder.Entity("inicio.models.Usuarios", b =>
                {
                    b.Navigation("albums");

                    b.Navigation("rols");
                });
#pragma warning restore 612, 618
        }
    }
}
